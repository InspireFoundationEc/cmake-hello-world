name: Build & Test

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
  build_and_test:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        #os: [ubuntu-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - name: Configure CMake
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build
        # Build your program with the given configuration
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Run Tests
        working-directory: ${{github.workspace}}/build
        # Execute tests defined by the CMake configuration.
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: ./tests

      - name: Test CLI apps (Linux)
        if: matrix.os == 'ubuntu-latest'
        working-directory: ${{github.workspace}}/build
        run: ./SquareRootCalc 2 && ./FactorialCalc 4

      - name: Test CLI apps (Windows)
        if: matrix.os == 'windows-latest'
        working-directory: ${{github.workspace}}/build
        run: .\SquareRootCalc.exe 2 && .\FactorialCalc.exe 4
